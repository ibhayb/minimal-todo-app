name: "publish"

on:
  push:
    branches:
      - "release"

jobs:
  publishtauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-22.04, windows-latest]

    runs-on: ${{ matrix.platform }}

    outputs:
      releaseId: ${{ steps.tauri.outputs.releaseId }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js with pnpm cache
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "pnpm"

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Add pnpm to PATH (Windows fix)
        if: matrix.platform == 'windows-latest'
        run: echo "C:\Users\runneradmin\AppData\Roaming\npm" >> $GITHUB_PATH

      - name: Install frontend dependencies
        run: pnpm install
        shell: bash

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Export TAURI_PRIVATE_KEY
        run: echo "TAURI_PRIVATE_KEY=${{ secrets.TAURI_PRIVATE_KEY }}" >> $GITHUB_ENV
        shell: bash

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install frontend dependencies
        run: pnpm install

      - uses: tauri-apps/tauri-action@v0.4
        id: tauri
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v__VERSION__
          releaseName: "v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: false
          prerelease: false
          includeUpdaterJson: true
          updaterJsonPreferNsis: true
          includeDebug: false
          includeRelease: true

  update-json:
    runs-on: ubuntu-latest
    needs: publishtauri

    steps:
      - uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"

      - name: Create or checkout branch
        run: |
          git checkout "update" || git checkout --orphan "update"

      - name: Remove all files
        run: |
          git rm -rf .

      - name: Fetch JSON file
        env:
          RELEASE_ID: ${{ needs.publishtauri.outputs.releaseId }}
        run: |
          echo "$RELEASE_ID"
          RELEASE_TAG=$(basename $RELEASE_ID)
          echo "$RELEASE_TAG"
          RELEASE_URL="https://github.com/skymen/construct-crawler/releases/download/$RELEASE_TAG/latest.json"
          echo "$RELEASE_URL"
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github.v3.raw" \
               -o latest.json -L "$RELEASE_URL"
          cat latest.json

      - name: Commit and push changes
        run: |
          git add latest.json
          git commit -m "Update latest.json"
          git push -u origin update --force
